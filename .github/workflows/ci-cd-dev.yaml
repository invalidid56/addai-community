name: Deploy to EC2 (dev)
on:
  push:
      branches:
        ["dev"]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@master

    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: invalidid56/addai-community
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    name: Deploy
    needs: build

    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master

      - name: setting secrets
        run: |
          export DB_HOST=${{ secrets.DB_HOST }}
          export DB_USER=${{ secrets.DB_USER }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p /home/ubuntu/srv/ubuntu

      - name: copy source via ssh key # ssh key를 이용해 현재 푸시된 소스를 서버에 복사한다.
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete --inplace
          remote_path: /home/ubuntu/srv/ubuntu/
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.EC2_KEY }}

      - name: executing remote ssh commands using password # TODO: 서버에 접속하여 Docker image pull 및 컨테이너 시작
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/srv/ubuntu
            
            docker stop $(docker ps -a -q)         
            
            export CREDENTIAL_ALGORITHM=${{ secrets.CREDENTIAL_ALGORITHM }}
            export CREDENTIAL_SECRET=${{ secrets.CREDENTIAL_SECRET }}
                        
            docker pull ${{ secrets.DOCKER_USERNAME }}/addai-community:latest
            
            docker run -d -p 8000:8000 \
              -e DB_HOST=$DB_HOST \
                -e DB_USER=$DB_USER \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e CREDENTIAL_ALGORITHM=$CREDENTIAL_ALGORITHM \
                -e CREDENTIAL_SECRET=$CREDENTIAL_SECRET \
                ${{ secrets.DOCKER_USERNAME }}/addai-community:latest
